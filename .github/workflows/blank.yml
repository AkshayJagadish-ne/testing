# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: 
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Run a one-line script
        run: python ./.github/workflows/genpy.py

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
        
      - name: switching from HTTPS to SSH
        run: git remote set-url origin ${{ secrets.ssh }}
      - name: check for changes
        run: git status
      - name: stage changed files
        run: git add .
      - name: commit changed files
        run: git commit -m "Auto updating TODO.txt"
      - name: fetch from master
        run: git fetch origin master
      - name: push code to master
        run: git push origin HEAD:master
        
        
      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.0
        with:
          timeZone: 0
          format: 'YYYY-MM-DD-HH-mm-ss'
      - name: Usage
        env:
          TIME: "${{ steps.time.outputs.time }}"
        run: |
          echo $TIME
          echo $GITHUB_SHA
          echo $GITHUB_REF
          
        




      - name: Create file
        uses: finnp/create-file-action@master
        env:
          FILE_NAME: example.md
          FILE_DATA: This is an example          
          
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
